<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:jms="http://www.springframework.org/schema/jms"
xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd
     http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.0.xsd">
	 
	<!-- 生产者和消费者都是使用同一个服务,所以使用产生的连接都是一致的 -->
	<import resource="applicationContext-jms.xml"/>
	
    <!--这个是队列目的地-->  
    <bean id="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">  
        <constructor-arg index="0" value="queue"/>
    </bean>
      
    <!-- Queue消息监听器 -->
    <bean id="queueMessageListener" class="cn.believeus.jms.QueueMessageListener"/>  
    <!-- 消息监听容器会执行一个死循环不断的执行queueMessageListener的onMessage方法监听Queue -->  
    <bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">  
        <property name="connectionFactory" ref="connectionFactory" />  
        <property name="destination" ref="queueDestination" />  
        <property name="messageListener" ref="queueMessageListener" />
        <property name="pubSubDomain" value="false"/>
    </bean>  
    
     <!--这个是主题目的地，一对多的-->
    <bean id="topicDestination" class="org.apache.activemq.command.ActiveMQTopic">
        <constructor-arg value="topicDestination"/>
    </bean>
 	
 	<bean id="topicMessageListener" class="cn.believeus.jms.TopicMessageListener" />
 	
 	<!-- 这段配置我们可以发现对于每一个listener监听者我们都需要配置一个container容器,很麻烦!用如下配置 -->
	<!-- <bean id="topicListenerContainerA"	class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="concurrentConsumers" value="1" />
		<property name="destination" ref="topicDestination" />
		<property name="messageListener" ref="topicMessageListener" />
		<property name="subscriptionDurable" value="true"/>
        <property name="clientId" value="osmusic"/>
        <property name="durableSubscriptionName" value="www.baidu.com"/>
	</bean> -->
    <!-- client-id="osmusic" 必须和服务端的client-id保持一致 -->
	<jms:listener-container client-id="osmusic" connection-factory="connectionFactory" concurrency="1"  destination-type="topic">
		<jms:listener destination="topicDestination" subscription="wuqiwei" ref="topicMessageListener" />
		<!-- <jms:listener destination="Topic-A" ref="topicListenerB" /> -->
	</jms:listener-container>
    
    
    
</beans>